(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{188:function(s,t,n){s.exports=n.p+"assets/img/awk_1.d904de8c.png"},231:function(s,t,n){"use strict";n.r(t);var a=n(6),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"linux-常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux-常用命令"}},[s._v("#")]),s._v(" linux 常用命令")]),s._v(" "),a("p",[s._v("本文总结或收集了一些 linux 常用命令的具体用法介绍，供忘记的时候做个参考。")]),s._v(" "),a("h2",{attrs:{id:"awk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#awk"}},[s._v("#")]),s._v(" AWK")]),s._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://github.com/mylxsw/growing-up/blob/master/doc/%E4%B8%89%E5%8D%81%E5%88%86%E9%92%9F%E5%AD%A6%E4%BC%9AAWK.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("三十分钟学会AWK"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("补充说明：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("$0")]),s._v(" 指的是一整行字符串，第一个字段是 "),a("code",[s._v("$1")]),s._v("。")]),s._v(" "),a("li",[a("code",[s._v("print")]),s._v(" 的字符串拼接符是"),a("code",[s._v("空格")]),s._v("，所以如果想要打印空格，需要手动拼接 "),a("code",[s._v('" "')]),s._v("，同时一次 "),a("code",[s._v("print")]),s._v(" 的结果会自带换行符。")]),s._v(" "),a("li",[s._v("如果 awk 中指定了多个文件，"),a("code",[s._v("NR")]),s._v(" 变量会把第二个文件的行号从第一个文件的行号末尾开始计数；而 "),a("code",[s._v("FNR")]),s._v(" 变量会独立计算每个文件的行号，彼此不受影响。(在 ubuntu 16.04 下的测试结果)"),a("br"),s._v(" "),a("img",{attrs:{src:n(188),alt:"awk_NR_FNR"}})]),s._v(" "),a("li",[s._v("语句之间要加分号，例如：")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意 if else 之间的分号，如果没有会报语法错误")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN{a=10; b = 20; if (a == b) print "a == b"; else print "a != b"}\'')]),s._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" b\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[a("p",[s._v("awk 的字符串连接符是空格，不是加号：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN { str1 = "Hello, "; str2 = "World"; str3 = str1 str2; print str3 }\'')]),s._v("\nHello, World\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("awk 的数组中如果没有定义某个下标的元素，则序号不会被打印：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("➜ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN{arr[0]=1; arr[2]=10; for (i in arr) printf \"arr[%d]: %d"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("\", i, arr[i]}'")]),s._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("常见用例：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 统计第 3 列中每个值出现的次数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" files "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{a["),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v(']++} END {for (i in a) {print i, a[i] | "sort -k 2 -g -r"}}\'')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 统计一个文件中的空白行")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" files "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^$/{x++} END {print x}'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查找替换")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# stanxing,1995.10.30 => tomxing,1995.10.30")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" files "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -F "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("','")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{gsub(/stan/,"tom",'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v(");print "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v("}'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 计算每行数字的平均数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# value,1,2,3,4,5 => value 3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" files "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -F "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("','")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{total="),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v("+"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v("+"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$4")]),s._v("+"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$5")]),s._v("+"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$6")]),s._v("; avg=total/5}{print "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(' " " total}\'')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出正则匹配的行")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# stanxing:pass")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# stanyang:rejected")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" files "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -F "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v(" ~ /stanxing/'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# if 的使用方式，如果第一个字段等于 stanxing 就输出")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# stanxing,1995.10.30")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# stanyang,1995.10.30")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" files "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -F "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("','")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{if ("),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(' == "stanxing"){print}}\'')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 根据下面的用例输出对应的用例结果")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输入：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 100")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a 100")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# b -50")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# c -20")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 100")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a 100")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 200")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# b -50")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 150")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# c -20")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"100'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("a 100"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("b -50"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('c -20"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ if(NR==1) {sum="),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("; print "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(";} else if (NR == 4) {print "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v(";} else {sum+="),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v("; print "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('" "'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("\"sum;}}'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 根据输入用例输出对应的结果")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#输入：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 12334:13510014336")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 12334:12343453453")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 12099:13598989899")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 12334:12345454545")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 12099:12343454544")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [12334]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 13510014336")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 12345454545")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 12343453453")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [12099]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 13598989899")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 12343454544")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"12334:13510014336'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("12334:12343453453"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("12099:13598989899"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("12334:12345454545"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('12099:12343454544"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" -r "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -F "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{a["),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("]++; if (a["),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('] == 1){print "["'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('"]"; print '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v(";} else {print "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v("}}'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br")])])])])])]),s._v(" "),a("h2",{attrs:{id:"sed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sed"}},[s._v("#")]),s._v(" SED")]),s._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://github.com/mylxsw/growing-up/blob/master/doc/%E4%B8%89%E5%8D%81%E5%88%86%E9%92%9F%E5%AD%A6%E4%BC%9ASED.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("三十分钟学会SED"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("补充说明：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("使用 "),a("code",[s._v("-r")]),s._v(" 开启扩展的正则表达式语法，可以使用 "),a("code",[s._v("\\1")]),s._v(" 代表匹配到正则分组的值")])]),s._v(" "),a("li",[a("p",[s._v("在字符串替换命令 s 中使用 "),a("code",[s._v("\\u 和 \\U")]),s._v("的结果是不一样的，"),a("code",[s._v("\\u")]),s._v(" 只会作用一个字符，"),a("code",[s._v("\\U")]),s._v(" 会作用匹配到的所有字符：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"123abc456"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -n -r "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/[a-z]{3}/\\u&/p'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 123Abc456\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"123abc456"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -r "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/[a-z]{3}/\\U&/p'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 123ABC456\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("常见用例：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将文本中的小写字母转换成大写")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/[a-z]/\\U&/g'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将文本中的大写字母转换成小写")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/[A-Z]/\\L&/g'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将 123abc456 变成 456ABC123")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"123abc456"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -r "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s#(...)(...)(...)#"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\3"}},[s._v("\\3")]),s._v("\\U"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\2"}},[s._v("\\2")]),a("span",{pre:!0,attrs:{class:"token entity",title:"\\1"}},[s._v("\\1")]),s._v("#g'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除文件每行的第一个字符")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/.//'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -r "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/(.)(.*)/"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\2"}},[s._v("\\2")]),s._v("/'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除文件每行的第二个字符")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -r "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/(.)(.)(.*)/"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\1"}},[s._v("\\1")]),a("span",{pre:!0,attrs:{class:"token entity",title:"\\3"}},[s._v("\\3")]),s._v("/'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除文件每行的倒数第二个字符")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -r "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/(.*)(.)(.)/"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\1"}},[s._v("\\1")]),s._v("/"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\3"}},[s._v("\\3")]),s._v("/'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除文件每行的第二个单词")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -r "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/(\\w+) (\\w+) (\\w+)/"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\1"}},[s._v("\\1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\3"}},[s._v("\\3")]),s._v("/'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 交换每行的第一个字符和第二个字符")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -r "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/(.)(.)(.*)/"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\2"}},[s._v("\\2")]),a("span",{pre:!0,attrs:{class:"token entity",title:"\\1"}},[s._v("\\1")]),a("span",{pre:!0,attrs:{class:"token entity",title:"\\3"}},[s._v("\\3")]),s._v("/'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除一个文件中所有的数字")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/[0-9]//g'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除每行开头的空格")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^\\s+//'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用制表符替换空格")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/\\s+/"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v("/g'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 把大写字母用括号括起来")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -r "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/([A-z])/\\("),a("span",{pre:!0,attrs:{class:"token entity",title:"\\1"}},[s._v("\\1")]),s._v(")/g'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 隔行删除")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0~2{=;d}'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 把文件第2行到4行的内容复制到第7行后面")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2h; 3,4H; 7G'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 把文件第2行到4行的内容移动到第7行后面")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2{h;d} 3,4{H;d}; 7G'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 去掉空行和以＃号开头的行")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -r "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/(^$|^#)/d'")]),s._v(" 或者 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^$/d'")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^#/d'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br")])])])])])]),s._v(" "),a("h2",{attrs:{id:"tcpdump"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcpdump"}},[s._v("#")]),s._v(" tcpdump")]),s._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://github.com/mylxsw/growing-up/blob/master/doc/tcpdump%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("tcpdump 简明教程"),a("OutboundLink")],1),s._v(":")]),s._v(" "),a("ul",[a("li",[s._v("补充说明：")])]),s._v(" "),a("p",[s._v("抓取 http 各请求方法的包，推荐使用 wireshark 的在线"),a("a",{attrs:{href:"https://www.wireshark.org/tools/string-cf.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Capture Filter Generator"),a("OutboundLink")],1),s._v("。对各条件内容的解释写在了注释里。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 过滤 GET 请求，含义解释如下：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tcp[12:1] 的意思是获取第 13 个字节，实际该字节内存的是 TCP 首部长度，但首部长度只占 4 位；`0xf0` 转换成二进制就是 11110000，与 tcpp[12:1] 做与运算相当于只保留前 4 位的值（也就是首部长度）。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 然后对其做右移 2 位的运算，实际上应该右移 4 位才能将前 4 位从高位移动到低位，但是由于 TCP 首部 4 位最大值为 15，但是单位是 4 字节，所以最大可以表示 60 个字节，右移 4 位后还需要再乘以 4，相当于右移两位了。这样计算出了整个 TCP 头部的偏移，下面就是数据报的内容了。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 最后再一次通过 tcp[((tcp[12:1] & 0xf0) >> 2):4] 意味着越过 TCP 首部获取数据报的前 4 个字节，对于 http 请求来说，其请求头的样式为 `GET /ping HTTP 1.1`, 前四个字节就是 `GET `（注意最后是一个空格）。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tcp[((tcp[12:1] & 0xf0) >> 2):4] = 0x47455420")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 过滤 POST 请求，含义解释如下：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 整个含义是一样的，只不过 POST 请求的数据报要检查前五个字节，即 `POST `。但是 tcpdump 的语法字节偏移最大是 4，所以需要写两边。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tcp[((tcp[12:1] & 0xf0) >> 2):4] = 0x504f5354 && tcp[((tcp[12:1] & 0xf0) >> 2) + 4:1] = 0x20")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 过滤 PUT 请求")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tcp[((tcp[12:1] & 0xf0) >> 2):4] = 0x50555420")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 过滤 DELETE 请求")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tcp[((tcp[12:1] & 0xf0) >> 2):4] = 0x44454c45 && tcp[((tcp[12:1] & 0xf0) >> 2) + 4:2] = 0x5445 && tcp[((tcp[12:1] & 0xf0) >> 2) + 6:1] = 0x20")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 过滤 HEAD 请求")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tcp[((tcp[12:1] & 0xf0) >> 2):4] = 0x48454144 && tcp[((tcp[12:1] & 0xf0) >> 2) + 4:1] = 0x20")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 过滤 HTTP 1.x 的响应，含义解释如下：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 原理也基本一样，只是 http 响应头的格式为 `HTTP/1.1 200 OK`，只需要过滤 `HTTP/1.`这几个字节（因为版本号不固定嘛）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tcp[((tcp[12:1] & 0xf0) >> 2):4] = 0x48545450 && tcp[((tcp[12:1] & 0xf0) >> 2) + 4:2] = 0x2f31 && tcp[((tcp[12:1] & 0xf0) >> 2) + 6:1] = 0x2e")]),s._v("\n\ntcpdump -Avvvn "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tcp[((tcp[12:1] & 0xf0) >> 2):4] = 0x47455420\n        || (tcp[((tcp[12:1] & 0xf0) >> 2):4] = 0x504f5354 && tcp[((tcp[12:1] & 0xf0) >> 2) + 4:1] = 0x20)\n        || (tcp[((tcp[12:1] & 0xf0) >> 2):4] = 0x50555420)\n        || (tcp[((tcp[12:1] & 0xf0) >> 2):4] = 0x44454c45 && tcp[((tcp[12:1] & 0xf0) >> 2) + 4:2] = 0x5445 && tcp[((tcp[12:1] & 0xf0) >> 2) + 6:1] = 0x20)\n        || (tcp[((tcp[12:1] & 0xf0) >> 2):4] = 0x48454144 && tcp[((tcp[12:1] & 0xf0) >> 2) + 4:1] = 0x20)\n        || (tcp[((tcp[12:1] & 0xf0) >> 2):4] = 0x48545450 && tcp[((tcp[12:1] & 0xf0) >> 2) + 4:2] = 0x2f31 && tcp[((tcp[12:1] & 0xf0) >> 2) + 6:1] = 0x2e)"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);