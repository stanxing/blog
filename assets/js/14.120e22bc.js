(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{195:function(s,t,a){"use strict";a.r(t);var n=a(6),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"mongodb-模型设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mongodb-模型设计"}},[s._v("#")]),s._v(" MongoDB 模型设计")]),s._v(" "),a("h2",{attrs:{id:"误区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#误区"}},[s._v("#")]),s._v(" 误区")]),s._v(" "),a("ul",[a("li",[s._v("MongoDB 不需要模型设计（当然需要，任何程序开发都应该先定义 schema 文档，只不过 MongoDB 没有强约束来限制数据库内的字段）")]),s._v(" "),a("li",[s._v("MongoDB 应该用一个超级大的文档来组织所有的数据（当然不行，MongoDB 文档限制最大 16MB，显然不可能无限嵌套）")])]),s._v(" "),a("h2",{attrs:{id:"文档模型设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文档模型设计"}},[s._v("#")]),s._v(" 文档模型设计")]),s._v(" "),a("ul",[a("li",[s._v("文档模型的设计实际是物理模型的设计阶段。")]),s._v(" "),a("li",[s._v("JSON 文档模型通过内嵌数组和引用字段来表示关联关系")]),s._v(" "),a("li",[s._v("文档模型设计不遵循第三范式，允许冗余")])]),s._v(" "),a("h2",{attrs:{id:"设计原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计原则"}},[s._v("#")]),s._v(" 设计原则")]),s._v(" "),a("ul",[a("li",[s._v("性能")]),s._v(" "),a("li",[s._v("开发易用")])]),s._v(" "),a("h3",{attrs:{id:"第一步，基础建模"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一步，基础建模"}},[s._v("#")]),s._v(" 第一步，基础建模")]),s._v(" "),a("ul",[a("li",[s._v("建立基础文档模型：\n"),a("ul",[a("li",[s._v("根据概念或者业务需求推导出逻辑模型，即 JSON 对象")]),s._v(" "),a("li",[s._v("列出实体之间的关系，即明确关系（1-1,1-N 还是 N-1）")]),s._v(" "),a("li",[s._v("套用逻辑设计原则来决定内嵌方式，进行建模")]),s._v(" "),a("li",[s._v("完成基础模型构建，即完成集合，文档，字段的构建")])])])]),s._v(" "),a("h4",{attrs:{id:"_1-1-关系建模"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-关系建模"}},[s._v("#")]),s._v(" 1-1 关系建模")]),s._v(" "),a("p",[s._v("基本原则：一对一的关系建模以内嵌为主，作为子文档形式，或者直接在顶级，不会涉及到数据冗余。")]),s._v(" "),a("p",[s._v("比如，一个联系人有一个头像，这是一一对应的：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// contacts")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"stanxing"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    portraits"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        mimetype"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" xxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        data"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" xxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h4",{attrs:{id:"_1-n-关系建模"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-n-关系建模"}},[s._v("#")]),s._v(" 1-N 关系建模")]),s._v(" "),a("p",[s._v("基本原则：一对多的关系同样以内嵌为主，用数组来表示一对多，不会涉及到数据冗余。")]),s._v(" "),a("p",[s._v("比如，一个人会有多个收货地址：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// contacts")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"stanxing"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    addresses"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"home"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" location"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xxx"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"work"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" location"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xxx"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h4",{attrs:{id:"n-n-关系建模"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#n-n-关系建模"}},[s._v("#")]),s._v(" N-N 关系建模")]),s._v(" "),a("p",[s._v("基本原则：不需要映射表，一般用内嵌数组来表示多对多，通过冗余来实现 N-N。")]),s._v(" "),a("p",[s._v("比如，一个人可以加入多个联系组，一个联系组又会有多个联系人：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// contacts")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"stanxing"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    groups"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Friends"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Surfers"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h3",{attrs:{id:"第二步，工况细化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二步，工况细化"}},[s._v("#")]),s._v(" 第二步，工况细化")]),s._v(" "),a("p",[s._v("根据业务的实际情况来判断内嵌数组是否会引起问题？如果数组大小不确定，或者数组太大而且频繁更改，依然可以选择使用引用来达到分表的目的。看下面几个例子：")]),s._v(" "),a("ul",[a("li",[s._v("联系人的分组信息很大，而且频繁修改：如果通过内嵌完成，每次更新一个分组信息，就会对所有人进行更新，造成很大的写入压力，因此应该单独对分组信息存入一个表。")]),s._v(" "),a("li",[s._v("内嵌文档太大，比如内嵌的是交易数据，一直在增加而且无限制：不应该使用内嵌文档，应该单独拆分出一个表来存储，通过引用关联。")])]),s._v(" "),a("h3",{attrs:{id:"第三部，套用设计模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三部，套用设计模式"}},[s._v("#")]),s._v(" 第三部，套用设计模式")]),s._v(" "),a("p",[s._v("TODO")])])}),[],!1,null,null,null);t.default=r.exports}}]);