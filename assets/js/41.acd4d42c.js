(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{226:function(s,t,l){"use strict";l.r(t);var u=l(6),p=Object(u.a)({},(function(){var s=this,t=s.$createElement,l=s._self._c||t;return l("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[l("h1",{attrs:{id:"pull-vs-push"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#pull-vs-push"}},[s._v("#")]),s._v(" Pull Vs Push")]),s._v(" "),l("p",[s._v("在考虑如何将 metrics 存入监控系统中时，一般有两种不同的解决方案。即 pull 和 push。pull 是指由监控系统从应用程序中拉取数据，这种情况一般需要应用程序监听一个端口暴露 metrics（使用 http）； push 是指由应用程序将 metrics 推送到系统中，一般使用 UDP。")]),s._v(" "),l("p",[s._v("push 方式的代表有 Graphite、influxdb；push 方式的代表就是 prometheus。两种方式都有各自的优缺点和适用的场景，下面将分析两种模式的优缺点。")]),s._v(" "),l("h2",{attrs:{id:"支持-pull-的理由"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#支持-pull-的理由"}},[s._v("#")]),s._v(" 支持 Pull 的理由")]),s._v(" "),l("ul",[l("li",[l("p",[s._v("更容易控制数据的真实性和数量：因为对哪些服务拉取 metrics 是由监控系统来配置并发起连接的，而在基于 push 的模型来说，只能靠白名单来决定允许哪些服务来推送数据，并不是所有的系统都支持白名单，而且推送的频率也是由应用程序决定的，服务端只能被动接收，如果推送数据太多，可能对监控系统造成负担。")])]),s._v(" "),l("li",[l("p",[s._v("更轻松的检索数据和 debug：pull 的模型很容易的看到应用程序返回的数据，像 porometheus 格式，每行数据都有注释来表达 metric 的意义。而且容易 debug，如果 push 模型没有收到数据，那有两种情况：应用程序发送的错误；监控系统接收的错误。pull 模型就很好判断了，在浏览器里面访问以下 metric 对应的 url 看看有没有数据返回。")])]),s._v(" "),l("li",[l("p",[s._v("更容易对数据加密：基于 https 协议的 pull 模型只需要在应用程序配置了证书即可。对于基于 udp 的 push 模型，就需要应用程序级别先对数据加密，然后发送给监控系统，监控系统再解密这样子，显然变得更复杂了。")])])]),s._v(" "),l("h2",{attrs:{id:"支持-push-的理由"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#支持-push-的理由"}},[s._v("#")]),s._v(" 支持 Push 的理由")]),s._v(" "),l("ul",[l("li",[l("p",[s._v("更容易实现摄取多副本的 metrics：现代应用大部分是基于分布式的，有多个副本，多个副本还支持自动扩容缩容，对于 pul 的模型来说，其维护的服务实例 ip 列表是一个动态变化的数组，所以就需要监控系统实现一个服务发现的组件来动态维护后端 ip 列表。而对于 push 模型来说，只要客户端推送即可，跟客户端数量无关，执行的是相同的代码逻辑。")])]),s._v(" "),l("li",[l("p",[s._v("适用于短生命周期的 batch job：对于 pull 模型来说，是周期性的提供 metrics 供监控程序拉取，而一般来说 batch job 的生命周期较短，可能没来的及启动一个 server，业务逻辑就执行完了，这样里面的监控数据没来的及被抓取就结束了，这类情况应该使用 push 模型。")])]),s._v(" "),l("li",[l("p",[s._v("push 一般使用 udp，pull 使用 http，从性能的角度分析 udp 不用维护连接，性能会更好一些。")])])]),s._v(" "),l("h2",{attrs:{id:"参考"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),l("ul",[l("li",[l("a",{attrs:{href:"https://giedrius.blog/2019/05/11/push-vs-pull-in-monitoring-systems/",target:"_blank",rel:"noopener noreferrer"}},[s._v("push-vs-pull-in-monitoring-systems"),l("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=p.exports}}]);